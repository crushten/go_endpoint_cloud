name: Scan

# The scheduled workflow runs every day at 03:00 UTC time.
on:
  schedule:
  - cron: '0 3 * * *'

jobs:
  audit:
    name: Application Scheduled Scan
    runs-on: ubuntu-20.04
    env:
      GO111MODULE: on
    steps:

      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Setup Go version
        uses: actions/setup-go@v3.3.1
        with:
          go-version-file: 'application/go.mod'
      - run: go version

      - name: Install gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@v2.12.0

      - name: Run gosec
        run: cd application/ && gosec -tests .

      - name: Create Go dep list
        run: cd application/ && go list -json -m all > go.list

      - name: Scan application with Nancy
        uses: sonatype-nexus-community/nancy-github-action@v1.0.2
        with:
          nancyVersion: "v1.0.41"
          goListFile: application/go.list

  docker-build:
    name: Docker Build
    runs-on: ubuntu-20.04
    steps:

      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.1.0

      - name: Build the Docker image
        uses: docker/build-push-action@v3.2.0
        with:
          context: application/
          tags: go_endpoint_cloud_docker:${{ github.sha }}
          outputs: type=docker,dest=/tmp/go_endpoint_cloud_docker.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          name: go_endpoint_cloud_docker
          path: /tmp/go_endpoint_cloud_docker.tar
          retention-days: 1

  docker-scan:
    name: Docker Scheduled Scan
    needs: docker-build
    runs-on: ubuntu-20.04
    steps:

    - name: Download artifact
      uses: actions/download-artifact@v3.0.1
      with:
        name: go_endpoint_cloud_docker
        path: /tmp

    - name: Load image into Docker
      run: |
        docker load --input /tmp/go_endpoint_cloud_docker.tar
        docker image ls -a

    - name: Run Aqua Security Trivy
      uses: aquasecurity/trivy-action@0.7.1
      with:
        image-ref: 'go_endpoint_cloud_docker:${{ github.sha }}'
        format: 'table'
        exit-code: "1"
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH,MEDIUM,LOW'

  terraform-scan:
    name: Terraform Scan
    runs-on: ubuntu-20.04
    steps:

       - name: Checkout 
         uses: actions/checkout@v3.1.0

       - name: Setup Terraform
         uses: hashicorp/setup-terraform@v2.0.2
         with:
           terraform_version: 1.2.8

       - name: Run tfsec
         uses: aquasecurity/tfsec-pr-commenter-action@v1.2.0
         with:
           working_directory: terraform/
           tfsec_version: v1.27.5
           github_token: ${{ secrets.GITHUB_TOKEN }}

       - name: Run Checkov
         uses: bridgecrewio/checkov-action@v12.1347.0
         with:
           directory: terraform/
           #download_external_modules: true

       - name: Run Terrascan
         uses: tenable/terrascan-action@v1.4.1
         with:
          iac_type: 'terraform'
          iac_version: 'v14'
          iac_dir: terraform/
          only_warn: true
          config_path: terraform/terrascan.config.toml
          #policy_type: 'aws'